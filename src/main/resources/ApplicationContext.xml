<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.*"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="packagesToScan" value="com.*"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties" ref="hibernateProperties"/>
    </bean>

    <bean id="hibernateProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <!-- Database and Connection Properties -->
                <prop key="hibernate.connection.driver_class">org.postgresql.Driver</prop>
                <prop key="hibernate.connection.useUnicode">true</prop>
                <prop key="hibernate.connection.characterEncoding">utf8</prop>
                <prop key="hibernate.connection.autoReconnect">true</prop>
                <prop key="hibernate.connection.autoReconnectForPools">true</prop>
                <prop key="hibernate.connection.is-connection-validation-required">true</prop>

                <!-- Transaction Management -->
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="org.hibernate.flushMode">COMMIT</prop>

                <!-- Hibernate Session and Bytecode -->
                <prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
                <prop key="hibernate.use_outer_join">true</prop>
                <prop key="hibernate.allow_update_outside_transaction">true</prop>
                <prop key="hibernate.connection.release_mode">after_transaction</prop>

                <!-- SQL Display Properties -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="org.hibernate.log_slow_query">true</prop>

                <!-- Schema Management -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>

                <!-- LOB Handling -->
                <prop key="hibernate.jdbc.lob.non_contextual_creation">true</prop>

                <!-- Statistics and Query Planning - Enhanced for 500 users -->
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.query.plan_cache_max_size">16384</prop>
                <prop key="hibernate.query.plan_cache_max_strong_references">2048</prop>
                <prop key="hibernate.query.plan_cache_max_soft_references">8192</prop>
                <prop key="hibernate.query.plan_parameter_metadata_max_size">2048</prop>

                <!-- Batch Processing - Optimized for ERP workloads -->
                <prop key="hibernate.jdbc.batch_size">100</prop>
                <prop key="hibernate.order_inserts">true</prop>
                <prop key="hibernate.order_updates">true</prop>
                <prop key="hibernate.jdbc.batch_versioned_data">true</prop>

                <!-- Performance Optimizations for High Concurrency -->
                <prop key="hibernate.jdbc.fetch_size">100</prop>
                <prop key="hibernate.default_batch_fetch_size">50</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>

                <!-- Connection Pool Integration -->
                <prop key="hibernate.connection.provider_class">org.hibernate.hikaricp.internal.HikariCPConnectionProvider</prop>

                <!-- Second-Level Cache Settings -->
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.ehcache.jsr107.EhcacheCachingProvider</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.jcache.internal.JCacheRegionFactory</prop>
                <prop key="hibernate.javax.cache.uri">ehcache.xml</prop>
                <prop key="hibernate.javax.cache.missing_cache_strategy">create</prop>

                <!-- Envers (Audit) Properties -->
                <prop key="org.hibernate.envers.Audited">false</prop>
                <prop key="hibernate.integration.envers.enabled">false</prop>
                <prop key="org.hibernate.envers.audit_table_suffix">_AUD</prop>
                <prop key="org.hibernate.envers.store_data_at_delete">true</prop>
                <prop key="org.hibernate.envers.revision_on_collection_change">true</prop>
            </props>
        </property>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="nestedTransactionAllowed" value="true"/>
    </bean>

    <!-- Transaction Management -->
    <tx:annotation-driven/>
</beans>